<reference anchor="RFC.4819" target="https://www.rfc-editor.org/info/rfc4819">
  <front>
    <title>Secure Shell Public Key Subsystem</title>
    <author fullname="J. Galbraith" initials="J." surname="Galbraith">
      <organization/>
    </author>
    <author fullname="J. Van Dyke" initials="J." surname="Van Dyke">
      <organization/>
    </author>
    <author fullname="J. Bright" initials="J." surname="Bright">
      <organization/>
    </author>
    <author>
      <organization>RFC Series</organization>
    </author>
    <date year="2007" month="March"/>
    <workgroup>secsh</workgroup>
    <abstract>
      <t>Secure Shell defines a user authentication mechanism that is based on public keys, but does not define any mechanism for key distribution. No common key management solution exists in current implementations. This document describes a protocol that can be used to configure public keys in an implementation-independent fashion, allowing client software to take on the burden of this configuration.</t>
      <t>The Public Key Subsystem provides a server-independent mechanism for clients to add public keys, remove public keys, and list the current public keys known by the server. Rights to manage public keys are specific and limited to the authenticated user.</t>
      <t>A public key may also be associated with various restrictions, including a mandatory command or subsystem. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="DOI" value="10.17487/RFC4819"/>
  <seriesInfo name="RFC" value="4819"/>
</reference>